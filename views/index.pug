extends layout

block content
  .inner
    .home
      .intro
        h1.title--single 코딩 킹 메이커
        h3
          span.grit 코딩을 배우고 싶은데 어떻게 시작해야할지 궁금하세요? 프로그래머가 되어 직업을 전향하고 싶으세요? 프리랜서나 화이트 해커가 될수도 있겠네요.
          br
          span.highlight 코딩 킹 메이커가 비전공자가 단기간에 프로그래머가 될수 있도록 도와 드리겠습니다.
      
      .background
        .desc
          h3 단기 교육 과정의 배경:
          h5 전 세계적으로 급증하는 프로그래머의 수요를 감당하기 위해 현재도 세계적으로 많은 코딩 붓캠프들과 같은 사설 기관들이 지금도 분주히 3달 정도의 교육 과정을 통해 개발자들을 양성하고 있습니다. 그런 프로그래머 양성 코스들을 연구하여 Case Study 들을 통해 약 700 ~ 1,000시간 (대략 3달 이상)에 개발자로 변신이 가능한 효과적인 온라인 교육 과정을  준비했습니다. 
        .picture
          img.imgHeight(src='/images/photos/tech-demand.png')
        img.imgHeight(src='/images/photos/elon-no-degree.jpg')
        img.imgHeight(src='/images/photos/degree-not-required.jpg')
      
      .whoAmI
        h3 Coding King Maker 소개:
        h5 저는 다윗 이에요. 현재 미국 CA주에서 금융업계 소프트웨어 개발자로 근무 중이며 수년전 다니던 회사를 퇴사하며 프로그래머가 되겠다며 두려움과 희망을 안고 코딩 공부를 시작했고 그 과정에서 격은 시간, 에너지, 금전적 낭비와 시행 착오를 통해 배운 노하우를 제가 그랬듯 장기간의 정규 교육 과정이 아닌 독학으로 배우고자 하시는 분들과 나누고자 합니다. 프로그래머라면 거의 모두가 동의하리라 믿는데요. 프로그래밍은 결국엔 독학일수 밖에 없습니다. 새로운 언어와 기술들이 끊임 없이 나오며 빠르게 변해가는 테크놀로지 필드의 특성상 개인은 끊임없이 공부해야하며 본인의 가치를 높이기 위해 열정을 가지고 시간과 노력을 투자하는것만이 방법이기 때문입니다.
        h5 코딩(Coding)한줄 몰랐던 제가 비전공자로 처음 코딩을 배울때 어디서부터 시작해야할지도 몰라서 눈물겹게 고생스러웠던 시간을 생각하며 제가 그랬던거처럼 장기간의 정규 교육 과정을 통하지 안고 코딩을 배우자고 하시는 분들께 최대한 시간 낭비, 심리적 부담과 고통을 덜어드리고자 본 프로그램을 만들게 되었습니다.  코딩을 기초부터 단계별로 공부하는 순서와 방법을 알려드리고 포토폴리오를 만들어서 국내 또는 저처럼 해외로 취직하는 방법까지 순서별로 가르쳐 드리겠습니다.

      .codingIs
        h2 코딩이란?
        h4 구글에 따르면 Coding is the process of using a programming language to get a computer to behave how you want it to. 즉, 컴퓨터가 알아듣는 언어들(C, C++, Java, C#, JavaScript 등)을 통하여 사용자가 원하는 특정한 일을 컴퓨터가 하도록 하는 방법임. 사람이 나라별 다른 언어를 사용하여 소통할수 있듯이 컴퓨터도 알아들을수 있는 언어들이 많습니다. 언어별로 특성과 장단점 등 기술적인면들을 알고자하면 무한정 파고들수 있지만 본 단기 프로그래머 양성 코스는 여러분들로 하여금 최대한 빨리 프로그래머가 될수 있도록 하는게 목적이기에 가능한 간단히 요점을 이해할수 있는 방법으로 설명하겠습니다.
      
      .whatToDo
        h2 어떻게 해야하나?
        h4 프로그래머로 인정받는 가장 빠르고 쉬운 방법은 개인 또는 회사 등의 조직들이 영리 활동을 할수있도록 해주는 Website, Web Application과 Mobile Application 을 만들수 있어야합니다. Website는 Web page들을 통해 정보 제공과 마캐팅을 주로 하는 목적이 크고 웹앱(Web Application)은 소비자들이 보통 웹 브라우져나 핸드폰 등을 통해 서비스나 상품을 구매 또는 사용할수 있도록 해줄수 있기 때문에 본인이 웹앱을 만들수 있다면 회사들이 사용하는 소프트웨어들을 관리하고 제작 또한 할수 있기에 학벌이나 자격증 같은거 없이 프로그래머로 인정 받고 그로인해 돈을 벌수 있습니다. 잘 아시겠지만 구글, 아마존, 페이스북 등 세계적인 기업들을 포함하여 요즘은 생각있는 개인이나 조직들은 기존의 교육 체계의 비효율성과 시간적, 금전적 낭비를 인지했고 결국엔 어떤 문제나 업무에 직면했을때 해결할수 있는 자신과 자질이 되느냐가 중요한 시대 입니다. 결론은 프로그래머로 인정받고 싶으시면 웹앱, 모바일앱 등으로 포토폴리오를 만들고 그를 통해 취직을 하거나 사업 활동 등을 할수있는것 입니다.
      .whatToKnow
        h2 무엇을 알아야 하나?
        h4 훌륭한 Web Application을 개발할려면 많은 인력과 기술이 투입되야겠지만 비지니스적 관점과 디자인 부분은 제외하고 순수하게 소프트웨어 개발 부분만 Frontend와 Backend로 구분하겠습니다. Frontend 즉, 클라이언스 사이드(Client side)는 사용자가 웹브라우져(Web Browser)를 통해 웹앱을 사용할수 있도록하는 테크놀로지들이며 주로 시각적인 효과를 내는 기술들입니다. HTML, CSS, JavaScript 등의 기술들로 웹사이트, 웹앱의 구조, 색상, 이미지, 애니메이션 등을 통해 사용자와 직접적인 소통을 담당한다고 보시면 됩니다. 반면, Backend 즉, 서버 사이드(Server side) 테크놀로지는 사용자들이 볼수는 없지만 PHP, Ruby, Phthon, Java, .Net and Node.js등의 서버 사이드 언어들과 MySQL, Oracle 등의 테이블에 근거한 SQL 데이타 베이스 또는 MongoDB와 같은 document형식의 NoSQL 데이타 베이스들을 사용하여 사용자들의 정보를 저장과 보안 및 시스템의 성능과 비지니스의 운영적인 측면의 논리를 구성하는 등의 목적을 위한 기술들로 보시면 됩니다. 기술적인 측면의 차이점과 각각의 특성을 이해하려들면 시작하기가 어려울만큼 많은 내용이라 무슨 말인지 이해가 되지 안으시더라도 걱정마십시요. 결국은 다 같은 일을 하기 위한 각각의 특성이 다른 기술들과 방법들이라 생각하시면 됩니다. 내가 선택한 기술과 언어를 바탕으로 하나씩 배워가시다 보면 추후에는 전반적으로 어떻게 돌아가는지 이해가되실것이고 그때그때 필요한 기술을 배워가시면 됩니다.
      .whatToLearn
        h2 어떤 테크놀로지 조합을 선택하고 배울것인가?
        h4 저도 처음 시작할때 어떤 언어와 스택 (Frontend & Backend 기술들의 조합)을 선택할지 고민하며 이것 저것 공부하다가 시간 낭비와 심적인 괴로움을 격었습니다. 그러다 결국 JavaScript를 근본으로 하는 Fullstack을 선택하게 되었고 지금은 아주 만족하고 내가 선택한 기술들을 더욱 깊이 연구하며 강점으로 발달 시키고 있습니다. 여러분께 가르쳐드릴 테크스텍 조합 역시 JavaScript 베이스의 기술들입니다. 많은 이유를 될수 있겠지만 그 중 최대 강점들은 JavaScript base의 기술 조합은 하나의 언어로 Frontend와 Backend 기술을 모두 구사할수 있어서 새로운 분야를 공부하시는 입장에서 하나의 언어에 집중할수 있다는것이고 또 하나의 큰 이유는 현재 JavaScript 테크스택 조합이 각광받고 있고 그를 필요로하는 조직들이 많으며 그 추세가 강해지고 있다는것입니다. 아래 도표는 2019년 설문 조사의 결과이니 참고 하십시요.
      .process
        h2 프로세스 전개 설명
        h5 코딩을 하기 위해 Code Editor와 이후 포토폴리오와 더불어 코딩에 전념하고 있다는 기록을 남기고, 매일 쌓아가는 과정을 저장할수 있는 버젼컨트롤 Github 계정을 만드는 등 기초 작업을 합니다. 그리고 앞서 설명 드렸듯 Frontend와 Backend로 나누어져서 그에 한하여 기술을 집중에서 Frontend 개발자나 Backend 개발자 또는 저처럼 시작부터 끝까지 다 할수 있는 Fullstack 개발자로 나누어 지게되는데 제 생각엔 추후에 Frontend나 Backend 둘 중 하나를 택일하여 집중하실수는 있으나 포토폴리오를 만들고 배우는 입장에서는 전반적으로 어떻게 되는지 알아야지 됨으로 본 코스에서는 풀스택을 가르쳐 드리도록 하겠습니다.
      .tools
        h2 개발에 필요한 tools
        h4 Code Editor가 필요합니다. Visual Studio Code
        table.frontend--subject
          thead
            tr
              th 툴스
              th 용도
              th 노트
            tr
              td Visual Studio Code
              td Code Editor
              a(href='https://code.visualstudio.com/' target blank) 다운로드
            tr
              td Github
              td Version Control
              a(href='https://code.visualstudio.com/' target blank) 다운로드
      .frontend
        h2 Full stack JavaScript 개발자 양성 코스
        h4 Frontend(클라이언스 사이드)
        table.frontend--subject
          thead
            tr
              th 과목
              th 용도
              th 목표
            tr
              td HTML
              td 용도
              td
            tr
              td CSS
              td 용도
              td
            tr
              td JavaScript
              td 용도
              td
            tr
              td React Framework
              td 용도
              td
        h5 Frontend 수업 목표 (결과물)
        h6 포토폴리오 프로젝트: Website 제작
      .backend
        h2 Backend(서버 사이드)
        h4 Node.js & MongoDB
        table.backend--subject
            thead
              tr
                th 과목
                th 용도
                th 목표
              tr
                td Node.js
                td
                td
              tr
                td MongoDB
                td
                td
        h5 Backend 수업 목표 (결과물)
        h6 포토폴리오 프로젝트: Fullstack Application 제작
      .thereAfter
        h2 이후 과정
        h4 포토폴리오와 이력서 제작, 국내와 해외 취직하는 방법 공유 및 과정 지원